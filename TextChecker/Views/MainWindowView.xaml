<Window x:Class="TextChecker.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:TextChecker.ViewModels"
        xmlns:converters="clr-namespace:TextChecker.Converters"
        d:DataContext="{d:DesignInstance viewModels:MainViewModel, IsDesignTimeCreatable=False}"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate x:Name="TextErrorTemplate">
                            <DockPanel LastChildFill="True">
                                <AdornedElementPlaceholder>
                                    <Border BorderBrush="Red" BorderThickness="2" />
                                </AdornedElementPlaceholder>
                                <TextBlock FontSize="20" Foreground="Red">Error</TextBlock>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="Label">
                <Setter Property="Margin" Value="2"/>
            </Style>

            <Style TargetType="CheckBox">
                <Setter Property="Margin" Value="2"/>
            </Style>

            <Style TargetType="ComboBox">
                <Setter Property="Margin" Value="2"/>
            </Style>

            <Style TargetType="Button">
                <Setter Property="Margin" Value="2"/>
            </Style>

            <Style TargetType="TextBlock">
                <Setter Property="Margin" Value="2"/>
            </Style>

            <converters:ConditionTranslateConverter x:Key="ConditionTranslateConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Label Content="Text" Grid.Column="0" Grid.Row="0"/>
        <TextBox  Grid.Column="1" Grid.Row="0" 
                  MinWidth="200"
                  Text="{Binding Text, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

        <Label Content="Value" Grid.Column="0" Grid.Row="1"/>
        <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                 Grid.Column="1" Grid.Row="1" />

        <Label Content="Wybrany warunek" Grid.Column="0" Grid.Row="2"/>
        <ComboBox Grid.Column="1" Grid.Row="2" 
                  ItemsSource="{Binding Conditions}" 
                  SelectedItem="{Binding Condition}" >
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Converter={StaticResource ConditionTranslateConverter}}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <Label Content="Czy uwzględniać wielkość liter?" Grid.Column="0" Grid.Row="3"/>

        <CheckBox Grid.Column="1" Grid.Row="3" 
                  VerticalAlignment="Center"
                  IsChecked="{Binding CaseSensitive}" />
        

        <Button Grid.Column="1" Grid.Row="4" 
                Content="Sprawdź wynik" 
                Command="{Binding CheckConditionCommand}" />

        <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="5"
                   HorizontalAlignment="Center"
                   Margin="20"
                   Text="{Binding Result, StringFormat='Wynik: {0}'}">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Result}" Value="True">
                            <Setter Property="Foreground" Value="Green"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Result}" Value="False">
                            <Setter Property="Foreground" Value="Red"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </Grid>
</Window>